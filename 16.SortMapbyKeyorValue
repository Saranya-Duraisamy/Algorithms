/* Sort or order a HashMap or TreeSet or any map item by value. Write a comparator
which compares by value, not by key. Entry class might help you here.*/
import java.util.*;
import java.util.Map.Entry;

class Test {
    public void OrderByValue(Map<String, Integer> map){
        Set<Entry<String, Integer>> set = map.entrySet();
        List<Entry<String, Integer>> list = new ArrayList<Entry<String, Integer>>(set);
        Collections.sort(list, new Comparator<Entry<String, Integer>>() {
            @Override
            public int compare(Entry<String, Integer> o1, Entry<String, Integer> o2) {
                //return o1.getValue()-o2.getValue();
                return o1.getKey().compareTo(o2.getKey());
            }
        });
        for(Map.Entry<String, Integer> entry:list){
            System.out.println(entry.getKey() + " = " + entry.getValue());
        }
    }
    public static void main(String args[]) {
        Test test = new Test();
        Map<String, Integer> map = new HashMap<String, Integer>();
        map.put("Java", 20);
        map.put("C++", 45);
        map.put("C", 25);
        map.put("Unix", 67);
        map.put("MAC", 26);
        map.put("Windows", 93);
        System.out.println(map);
        test.OrderByValue(map);
    }
}
